@model TenderDetailsViewModel

<!-- Flowbite CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.css" rel="stylesheet" />
<!-- FontAwesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
<!-- PDF.js for document viewing -->
<script src="https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/build/pdf.min.js"></script>

<style>
    
    body {
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
        background: #f8fafc;
    }

    .page-container {
        max-width: 1280px;
        margin: 0 auto;
        padding: 2rem;
        animation: fadeIn 0.5s ease-out;
    }

    /* Tender header */
    .tender-header {
        background: linear-gradient(135deg, #1e40af 0%, #3b82f6 100%);
        border-radius: 1rem 1rem 0 0;
        padding: 2.5rem 2rem;
        position: relative;
        overflow: hidden;
        animation: slideInUp 0.6s ease-out;
    }

    .tender-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -20%;
        width: 600px;
        height: 600px;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
        border-radius: 50%;
    }

    /* Status badges */
    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        font-weight: 600;
        font-size: 0.875rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .status-badge:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .status-open {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
    }

    .status-closed {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
    }

    .status-pending {
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        color: white;
    }

    .verified {
        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        color: white;
    }

    .not-verified {
        background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
        color: white;
    }

    .verification-pending {
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        color: white;
    }

    /* Tabs */
    .tabs-container {
        background: white;
        padding: 0 1.5rem;
        border-bottom: 1px solid #e5e7eb;
        display: flex;
    }

    .tab-button {
        padding: 1.25rem 1.5rem;
        color: #64748b;
        font-weight: 600;
        position: relative;
        transition: all 0.3s ease;
        background: none;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .tab-button:hover {
        color: #3b82f6;
    }

    .tab-button.active {
        color: #3b82f6;
    }

    .tab-button.active::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 3px;
        background: #3b82f6;
        border-radius: 3px 3px 0 0;
    }

    /* Info cards */
    .info-card {
        background: white;
        border-radius: 1rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        transition: all 0.3s ease;
        margin-bottom: 1.5rem;
        overflow: hidden;
        animation: slideInUp 0.6s ease-out;
        border: 1px solid rgba(229, 231, 235, 0.5);
    }

    .info-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    /* Publisher card */
    .publisher-card {
        text-align: center;
        padding: 2rem;
    }

    .publisher-photo {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        margin: 0 auto 1rem;
        border: 4px solid #e2e8f0;
        object-fit: cover;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    /* Timeline */
    .timeline-container {
        display: flex;
        justify-content: space-between;
        position: relative;
        padding: 2rem 0;
    }

    .timeline-item {
        flex: 1;
        text-align: center;
        position: relative;
    }

    .timeline-item::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 0;
        width: 100%;
        height: 2px;
        background: #e2e8f0;
        z-index: 0;
    }

    .timeline-point {
        width: 40px;
        height: 40px;
        background: white;
        border: 2px solid #3b82f6;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        z-index: 1;
        margin: 0 auto 1rem;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .timeline-item:hover .timeline-point {
        transform: scale(1.1);
        box-shadow: 0 4px 8px rgba(59, 130, 246, 0.3);
        background: #eff6ff;
    }

    /* PDF viewer */
    .pdf-viewer {
        background: white;
        border-radius: 1rem;
        padding: 1.5rem;
        margin-top: 1.5rem;
        height: 800px;
        overflow-y: auto;
        border: 1px solid #e5e7eb;
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    /* Action buttons */
    .action-button {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .primary-button {
        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        color: white;
        box-shadow: 0 4px 6px rgba(37, 99, 235, 0.25);
    }

    .primary-button:hover {
        background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
        transform: translateY(-2px);
        box-shadow: 0 6px 10px rgba(37, 99, 235, 0.3);
    }

    .verify-button {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
        box-shadow: 0 4px 6px rgba(5, 150, 105, 0.25);
    }

    .verify-button:hover {
        background: linear-gradient(135deg, #059669 0%, #047857 100%);
        transform: translateY(-2px);
        box-shadow: 0 6px 10px rgba(5, 150, 105, 0.3);
    }

    .reject-button {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
        box-shadow: 0 4px 6px rgba(220, 38, 38, 0.25);
    }

    .reject-button:hover {
        background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
        transform: translateY(-2px);
        box-shadow: 0 6px 10px rgba(220, 38, 38, 0.3);
    }

    /* Back button */
    .back-button {
        color: rgba(255, 255, 255, 0.8);
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem;
        border-radius: 0.5rem;
    }

    .back-button:hover {
        color: white;
        background: rgba(255, 255, 255, 0.1);
        transform: translateX(-5px);
    }

    /* Tab content */
    .tab-content {
        animation: fadeIn 0.5s ease-out;
        display: none;
    }

    .tab-content.active {
        display: block;
    }

    /* Info item */
    .info-item {
        display: flex;
        justify-content: space-between;
        padding: 0.75rem 0;
        border-bottom: 1px solid #f1f5f9;
    }

    .info-item:last-child {
        border-bottom: none;
    }

    /* PDF container */
    .pdf-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        align-items: center;
    }

    .pdf-container canvas {
        max-width: 100%;
        height: auto;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        border-radius: 0.5rem;
    }

    /* Loading spinner */
    .loading-spinner {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 200px;
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #e5e7eb;
        border-top-color: #3b82f6;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

   
</style>

<div class="page-container">
    <!-- Tender Header -->
    <div class="tender-header">
        <div class="flex justify-between items-center mb-6">
            <button onclick="history.back()" class="back-button">
                <i class="fas fa-arrow-left text-xl"></i>
                <span class="hidden sm:inline">Back</span>
            </button>
            <div class="flex gap-4">
                <span class="status-badge status-@Model.Tender.TenderStatus.ToLower()">
                    <i class="fas @(Model.Tender.TenderStatus.ToLower() == "open" ? "fa-door-open" :
                                  Model.Tender.TenderStatus.ToLower() == "closed" ? "fa-lock" : "fa-clock")"></i>
                    @Model.Tender.TenderStatus
                </span>
                <span class="status-badge @(Model.Tender.IsVerified == "Verified" ? "verified" :
                                          Model.Tender.IsVerified == "Not Verified" ? "not-verified" : "verification-pending")">
                    <i class="fas @(Model.Tender.IsVerified == "Verified" ? "fa-check-circle" :
                                  Model.Tender.IsVerified == "Not Verified" ? "fa-times-circle" : "fa-spinner fa-spin")"></i>
                    @Model.Tender.IsVerified
                </span>
            </div>
        </div>

        <h1 class="text-3xl font-bold text-white mb-4">@Model.Tender.Title</h1>
        <div class="flex flex-wrap items-center gap-6 text-white/90">
            <span class="flex items-center gap-2">
                <i class="fas fa-hashtag"></i>
                <span>Tender ID: @Model.Tender.TenderId</span>
            </span>
            <span class="flex items-center gap-2">
                <i class="fas fa-calendar-alt"></i>
                <span>Posted: @Model.Tender.IssuedDate.ToString("MMM dd, yyyy")</span>
            </span>
            <span class="flex items-center gap-2">
                <i class="fas fa-user-tie"></i>
                <span>Issued By: @Model.Tender.IssuedBy</span>
            </span>
        </div>
    </div>

    <!-- Verification Actions -->
    <div class="bg-white p-4 border-b border-gray-200 flex justify-end gap-3">
        <a href="javascript:void(0);" 
           class="action-button verify-button verify-btn" 
           data-id="@Model.Tender.TenderId" 
           data-status="Verified">
            <i class="fas fa-check-circle"></i>
            Verify Tender
        </a>
        <a href="javascript:void(0);" 
           class="action-button reject-button verify-btn" 
           data-id="@Model.Tender.TenderId" 
           data-status="Not Verified">
            <i class="fas fa-times-circle"></i>
            Reject Tender
        </a>

        <!-- Hidden Form for AJAX Submit -->
        <form id="verifyForm_@Model.Tender.TenderId" class="hidden" method="POST"
              asp-action="UpdateVerifiedStatus" asp-controller="Admin">
            @Html.AntiForgeryToken()
            <input type="hidden" name="TenderId" value="@Model.Tender.TenderId" />
            <input type="hidden" name="IsVerified" />
        </form>
    </div>

    <!-- Tabs Navigation -->
    <div class="tabs-container">
        <button onclick="showTab('details')" class="tab-button active" id="details-tab-btn">
            <i class="fas fa-info-circle"></i>
            Details
        </button>
        <button onclick="showTab('documents')" class="tab-button" id="documents-tab-btn">
            <i class="fas fa-file-pdf"></i>
            Documents
        </button>
    </div>

    <!-- Content Area -->
    <div class="bg-white rounded-b-lg shadow-sm">
        <!-- Details Tab -->
        <div id="details-tab" class="tab-content active p-6">
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                <!-- Publisher Card -->
                <div class="info-card publisher-card">
                    @if (!string.IsNullOrEmpty(Model.User.UserPhoto))
                    {
                        <img src="@Url.Content("~/UserImage/" + Model.User.UserPhoto)"
                             alt="Publisher"
                             class="publisher-photo">
                    }
                    else
                    {
                        <div class="publisher-photo bg-blue-100 flex items-center justify-center">
                            <i class="fas fa-user text-4xl text-blue-500"></i>
                        </div>
                    }
                    <h3 class="text-xl font-semibold text-gray-800 mb-2">
                        @Model.User.FirstName @Model.User.MiddleName @Model.User.LastName
                    </h3>
                    <span class="inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium mb-4">
                        @Model.User.UserRole
                    </span>
                    <div class="space-y-3 text-left">
                        <div class="flex items-center gap-3">
                            <div class="w-8 h-8 rounded-lg bg-blue-100 flex items-center justify-center">
                                <i class="fas fa-envelope text-blue-500"></i>
                            </div>
                            <span class="text-gray-700">@Model.User.EmailAddress</span>
                        </div>
                        <div class="flex items-center gap-3">
                            <div class="w-8 h-8 rounded-lg bg-blue-100 flex items-center justify-center">
                                <i class="fas fa-phone text-blue-500"></i>
                            </div>
                            <span class="text-gray-700">@Model.User.Phone</span>
                        </div>
                        <div class="flex items-center gap-3">
                            <div class="w-8 h-8 rounded-lg bg-blue-100 flex items-center justify-center">
                                <i class="fas fa-map-marker-alt text-blue-500"></i>
                            </div>
                            <span class="text-gray-700">@Model.User.City, @Model.User.District</span>
                        </div>
                        <div class="flex items-center gap-3">
                            <div class="w-8 h-8 rounded-lg bg-blue-100 flex items-center justify-center">
                                <i class="fas fa-flag text-blue-500"></i>
                            </div>
                            <span class="text-gray-700">@Model.User.Province</span>
                        </div>
                    </div>
                </div>

                <!-- Tender Details -->
                <div class="lg:col-span-2">
                    <!-- Basic Information -->
                    <div class="info-card mb-6">
                        <div class="p-6">
                            <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
                                <i class="fas fa-info-circle text-blue-600 mr-2"></i>Tender Information
                            </h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <div class="info-item">
                                        <span class="text-gray-600">Type</span>
                                        <span class="font-medium text-gray-800">@Model.Tender.TenderType</span>
                                    </div>
                                    <div class="info-item">
                                        <span class="text-gray-600">Duration</span>
                                        <span class="font-medium text-gray-800">@Model.Tender.ProjectDuration</span>
                                    </div>
                                    <div class="info-item">
                                        <span class="text-gray-600">Budget</span>
                                        <span class="font-medium text-green-600">
                                            <i class="fas fa-rupee-sign mr-1"></i>
                                            @Model.Tender.BudgetEstimation.ToString("N2")
                                        </span>
                                    </div>
                                </div>
                                <div>
                                    <div class="info-item">
                                        <span class="text-gray-600">Issued Date</span>
                                        <span class="font-medium text-gray-800">@Model.Tender.IssuedDate.ToString("MMM dd, yyyy")</span>
                                    </div>
                                    <div class="info-item">
                                        <span class="text-gray-600">Opening Date</span>
                                        <span class="font-medium text-gray-800">@Model.Tender.OpeningDate.ToString("MMM dd, yyyy")</span>
                                    </div>
                                    <div class="info-item">
                                        <span class="text-gray-600">Closing Date</span>
                                        <span class="font-medium text-gray-800">@Model.Tender.ClosingDate.ToString("MMM dd, yyyy")</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Timeline -->
                    <div class="info-card">
                        <div class="p-6">
                            <h3 class="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                                <i class="fas fa-clock text-blue-600 mr-2"></i>Timeline
                            </h3>
                            <div class="timeline-container">
                                <div class="timeline-item">
                                    <div class="timeline-point">
                                        <i class="fas fa-flag text-blue-600"></i>
                                    </div>
                                    <div class="font-medium">Issue Date</div>
                                    <div class="text-sm text-gray-600">
                                        @Model.Tender.IssuedDate.ToString("MMM dd, yyyy")
                                    </div>
                                </div>
                                <div class="timeline-item">
                                    <div class="timeline-point">
                                        <i class="fas fa-door-open text-blue-600"></i>
                                    </div>
                                    <div class="font-medium">Opening Date</div>
                                    <div class="text-sm text-gray-600">
                                        @Model.Tender.OpeningDate.ToString("MMM dd, yyyy")
                                    </div>
                                </div>
                                <div class="timeline-item">
                                    <div class="timeline-point">
                                        <i class="fas fa-lock text-blue-600"></i>
                                    </div>
                                    <div class="font-medium">Closing Date</div>
                                    <div class="text-sm text-gray-600">
                                        @Model.Tender.ClosingDate.ToString("MMM dd, yyyy")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Documents Tab -->
        <div id="documents-tab" class="tab-content p-6">
            <div class="mb-6">
                <h3 class="text-xl font-semibold text-gray-800 flex items-center">
                    <i class="fas fa-file-pdf text-blue-600 mr-2"></i>Tender Document
                </h3>
                <p class="text-gray-600 mt-2">
                    View and download the official tender document below.
                </p>
            </div>
            
            <div class="flex justify-end mb-4">
                <a href="@Url.Content("~/TenderDocument/" + Model.Tender.TenderDocument)" 
                   class="action-button primary-button" download>
                    <i class="fas fa-download"></i>
                    Download Document
                </a>
            </div>
            
            <div class="pdf-viewer">
                <div id="pdf-container" class="pdf-container">
                    <div class="loading-spinner">
                        <div class="spinner"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Flowbite JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Show details tab by default
        showTab('details');
        
        // Load PDF when documents tab is clicked
        document.getElementById('documents-tab-btn').addEventListener('click', function() {
            loadPDF();
        });
        
        // Verify/Reject buttons
        document.querySelectorAll('.verify-btn').forEach(button => {
            button.addEventListener('click', function () {
                let tenderId = this.getAttribute('data-id');
                let status = this.getAttribute('data-status'); // Get the current status (Verified or Not Verified)
                let form = document.getElementById(`verifyForm_${tenderId}`);
                form.querySelector('input[name="IsVerified"]').value = status; // Set the correct status in the form

                if (confirm(`Are you sure you want to mark this tender as ${status}?`)) {
                    // Submit the hidden form via AJAX
                    fetch(form.action, {
                        method: form.method,
                        body: new FormData(form),
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert(`Tender ${status} successfully!`);
                                location.reload(); // Reload page to update status
                            } else {
                                alert("Failed to update tender status.");
                            }
                        })
                        .catch(error => console.error("Error:", error));
                }
            });
        });
    });

    function showTab(tabName) {
        const tabs = document.querySelectorAll('.tab-content');
        const buttons = document.querySelectorAll('.tab-button');

        tabs.forEach(tab => {
            tab.classList.remove('active');
        });

        buttons.forEach(btn => {
            btn.classList.remove('active');
        });

        document.getElementById(`${tabName}-tab`).classList.add('active');
        document.getElementById(`${tabName}-tab-btn`).classList.add('active');
        
        // Load PDF when documents tab is clicked
        if (tabName === 'documents') {
            loadPDF();
        }
    }

    function loadPDF() {
        const pdfContainer = document.getElementById('pdf-container');
        
        // Check if PDF is already loaded
        if (pdfContainer.querySelector('canvas')) {
            return;
        }
        
        const url = "@Url.Content("~/TenderDocument/" + Model.Tender.TenderDocument)";
        
        pdfjsLib.getDocument(url).promise.then(pdf => {
            // Clear loading indicator
            pdfContainer.innerHTML = '';
            
            const scale = 1.5;
            const numPages = pdf.numPages;

            // Render all pages
            for (let pageNum = 1; pageNum <= numPages; pageNum++) {
                const pageContainer = document.createElement('div');
                pageContainer.className = 'mb-6 relative';
                
                const pageLabel = document.createElement('div');
                pageLabel.className = 'absolute top-2 right-2 bg-blue-600 text-white text-xs font-bold px-2 py-1 rounded-md opacity-75';
                pageLabel.textContent = `Page ${pageNum} of ${numPages}`;
                
                const canvas = document.createElement('canvas');
                canvas.className = 'mx-auto shadow-md rounded-lg';
                
                pageContainer.appendChild(canvas);
                pageContainer.appendChild(pageLabel);
                pdfContainer.appendChild(pageContainer);

                pdf.getPage(pageNum).then(page => {
                    const viewport = page.getViewport({ scale });
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;
                    const ctx = canvas.getContext('2d');

                    page.render({
                        canvasContext: ctx,
                        viewport: viewport
                    });
                });
            }
        }).catch(error => {
            console.error('Error loading PDF:', error);
            pdfContainer.innerHTML = `
                <div class="text-center p-8">
                    <i class="fas fa-exclamation-circle text-4xl text-red-500 mb-4"></i>
                    <h3 class="text-xl font-semibold text-gray-800 mb-2">Error Loading PDF</h3>
                    <p class="text-gray-600">There was an error loading the document. Please try downloading it instead.</p>
                </div>
            `;
        });
    }
</script>