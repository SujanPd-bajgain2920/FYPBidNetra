@model AuctionDetailsViewModel

<script src="https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/build/pdf.min.js"></script>

<style>
    .tender-card {
        animation: fadeInUp 0.6s ease-out;
    }

    .status-badge {
        padding: 0.6rem 1.2rem;
        border-radius: 12px;
        font-weight: 600;
        font-size: 0.9rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .status-badge:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    /* Status Styles */
    .status-open {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
    }

    .status-closed {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
    }

    .status-pending {
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        color: white;
    }

    /* Verification Styles */
    .verified {
        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        color: white;
    }

    .not-verified {
        background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
        color: white;
    }

    .verification-pending {
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        color: white;
    }

    .info-card {
        background: white;
        border-radius: 16px;
        padding: 1.5rem;
        transition: all 0.3s ease;
        border: 1px solid rgba(229, 231, 235, 0.5);
        position: relative;
        overflow: hidden;
    }

    .info-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: linear-gradient(90deg, #3b82f6, #2563eb);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .info-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 20px -10px rgba(0, 0, 0, 0.1);
    }

    .info-card:hover::before {
        opacity: 1;
    }

    .timeline-container {
        position: relative;
        padding-left: 2rem;
    }

    .timeline-item {
        position: relative;
        padding: 1.5rem;
        background: white;
        border-radius: 12px;
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
    }

    .timeline-item::before {
        content: '';
        position: absolute;
        left: -1rem;
        top: 50%;
        width: 2rem;
        height: 2px;
        background: #3b82f6;
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 0.3s ease;
    }

    .timeline-item:hover {
        transform: translateX(10px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .timeline-item:hover::before {
        transform: scaleX(1);
    }

    .tab-btn {
        position: relative;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .tab-btn::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background: #3b82f6;
        transform: scaleX(0);
        transition: transform 0.3s ease;
    }

    .tab-btn.active::after {
        transform: scaleX(1);
    }

    .download-btn {
        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        color: white;
        padding: 1rem 2rem;
        border-radius: 12px;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        box-shadow: 0 4px 6px rgba(59, 130, 246, 0.2);
    }

    .download-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 8px rgba(59, 130, 246, 0.3);
    }

    .tender-header {
        background: linear-gradient(135deg, #1e40af 0%, #1e3a8a 100%);
        padding: 2rem;
        border-radius: 16px 16px 0 0;
        position: relative;
        overflow: hidden;
    }

    .tender-header::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 300px;
        height: 300px;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
        transform: translate(30%, -30%);
    }

    .status-icon {
        width: 24px;
        height: 24px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.2);
        margin-right: 0.5rem;
    }

    [data-status="open"] .info-card { border-left: 4px solid #10b981; }
    [data-status="closed"] .info-card { border-left: 4px solid #ef4444; }
    [data-status="pending"] .info-card { border-left: 4px solid #f59e0b; }

    /* Progress indicator for verification */
    .verification-progress {
        height: 4px;
        background: #e5e7eb;
        border-radius: 2px;
        overflow: hidden;
        margin-top: 1rem;
    }

    .verification-progress-bar {
        height: 100%;
        transition: width 0.3s ease;
    }

    [data-verified="yes"] .verification-progress-bar {
        width: 100%;
        background: #3b82f6;
    }

    [data-verified="no"] .verification-progress-bar {
        width: 33%;
        background: #6b7280;
    }

    [data-verified="pending"] .verification-progress-bar {
        width: 66%;
        background: #f59e0b;
    }

    /* Image Gallery Styles */
    .image-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-top: 1rem;
    }

    .image-gallery img {
        width: 100%;
        height: auto;
        border-radius: 12px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .image-gallery img:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
</style>

<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8 max-w-7xl">
        <div class="tender-card" data-status="@Model.Auction.AuctionStatus.ToLower()" data-verified="@Model.Auction.IsVerified.ToLower()">
            <div class="flex items-center justify-between mb-6">
                <button onclick="history.back()"
                        class="text-gray-600 hover:text-gray-800 transition-all duration-300 hover:scale-110">
                    <i class="fas fa-arrow-left text-xl"></i>
                </button>
                <!-- Verification Buttons -->
                <div class="flex gap-4">
                    <a href="javascript:void(0);"
                       class="btn text-green-600 hover:text-green-900 verify-btn flex items-center space-x-1"
                       data-id="@Model.Auction.AuctionId"
                       data-status="Verified"
                       title="Verify">
                        <i class="fas fa-check-circle text-lg"></i>
                        <span class="text-sm">Verify</span>
                    </a>
                    <a href="javascript:void(0);"
                       class="btn text-red-600 hover:text-red-900 verify-btn flex items-center space-x-1"
                       data-id="@Model.Auction.AuctionId"
                       data-status="Not Verified"
                       title="Not Verify">
                        <i class="fas fa-times-circle text-lg"></i>
                        <span class="text-sm">Not Verify</span>
                    </a>
                </div>

                <!-- Hidden Form for AJAX Submit -->
                <form id="verifyForm_@Model.Auction.AuctionId" class="hidden" method="POST"
                      asp-action="UpdateAVerifiedStatus" asp-controller="Admin">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="AuctionId" value="@Model.Auction.AuctionId" />
                    <input type="hidden" name="IsVerified" />
                </form>
                <div class="flex gap-4">
                    <span class="status-badge @(Model.Auction.AuctionStatus.ToLower() == "active" ? "status-open" :
                                              Model.Auction.AuctionStatus.ToLower() == "completed" ? "status-closed" : "status-pending")">
                        <div class="status-icon">
                            <i class="fas @(Model.Auction.AuctionStatus.ToLower() == "active" ? "fa-door-open" :
                                          Model.Auction.AuctionStatus.ToLower() == "completed" ? "fa-lock" : "fa-clock") text-xs"></i>
                        </div>
                        @Model.Auction.AuctionStatus
                    </span>
                    <span class="status-badge @(Model.Auction.IsVerified == "Verified" ? "verified" :
                           Model.Auction.IsVerified == "Not Verified" ? "not-verified" : "verification-pending")">
                        <div class="status-icon">
                            <i class="fas @(Model.Auction.IsVerified == "Verified" ? "fa-shield-check" :
                      Model.Auction.IsVerified == "Not Verified" ? "fa-times-circle" : "fa-spinner fa-spin") text-xs"></i>
                        </div>
                        @Model.Auction.IsVerified
                    </span>
                </div>
            </div>

            <div class="bg-white rounded-xl shadow-lg overflow-hidden">
                <div class="tender-header">
                    <h1 class="text-3xl font-bold text-white mb-3">@Model.Auction.Title</h1>
                    <div class="flex items-center text-blue-100 space-x-6">
                        <span class="flex items-center">
                            <i class="fas fa-hashtag mr-2"></i>
                            <span class="opacity-90">Tender ID:</span>
                            <span class="font-semibold ml-2">@Model.Auction.AuctionId</span>
                        </span>
                        <span class="flex items-center">
                            <i class="fas fa-calendar-alt mr-2"></i>
                            <span class="opacity-90">Start:</span>
                            <span class="font-semibold ml-2">@Model.Auction.StartDate.ToString("MMM dd, yyyy")</span>
                        </span>
                    </div>
                </div>

                <div class="border-b border-gray-200">
                    <nav class="flex space-x-4 px-6" aria-label="Tabs">
                        <button onclick="showTab('details')" class="tab-btn px-4 py-3 text-sm font-medium text-blue-600 border-b-2 border-blue-600">
                            <i class="fas fa-info-circle mr-2"></i>Details
                        </button>
                        <button onclick="showTab('auction')" class="tab-btn px-4 py-3 text-sm font-medium text-gray-500 hover:text-gray-700">
                            <i class="fas fa-image mr-2"></i>Auction Images
                        </button>
                    </nav>
                </div>

                <div class="p-6">
                    <!-- Details Tab -->
                    <div id="details-tab" class="tab-content active">
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                            <!-- Publisher Details Card -->
                            <div class="info-card lg:col-span-1">
                                <h2 class="text-xl font-semibold text-gray-800 mb-4">
                                    <i class="fas fa-user-shield text-indigo-600 mr-2"></i>Publisher Details
                                </h2>
                                <div class="flex flex-col items-center mb-4">
                                    @if (!string.IsNullOrEmpty(Model.User.UserPhoto))
                                    {
                                        <img src="@Url.Content("~/UserImage/" + Model.User.UserPhoto)"
                                             alt="Publisher Photo"
                                             class="publisher-photo w-24 h-24 rounded-full object-cover border-4 border-blue-100 shadow-lg mb-3">
                                    }
                                    else
                                    {
                                        <div class="publisher-photo w-24 h-24 rounded-full bg-blue-100 flex items-center justify-center">
                                            <i class="fas fa-user text-4xl text-blue-500"></i>
                                        </div>
                                    }
                                    <h3 class="text-lg font-semibold text-gray-800">
                                        @Model.User.FirstName @Model.User.MiddleName @Model.User.LastName
                                    </h3>
                                    <span class="text-sm text-blue-600 bg-blue-100 px-3 py-1 rounded-full mt-2">
                                        @Model.User.UserRole
                                    </span>
                                </div>
                                <div class="space-y-3">
                                    <div class="contact-info flex items-center text-gray-600">
                                        <i class="fas fa-envelope w-6 text-blue-500"></i>
                                        <span class="ml-2">@Model.User.EmailAddress</span>
                                    </div>
                                    <div class="contact-info flex items-center text-gray-600">
                                        <i class="fas fa-phone w-6 text-blue-500"></i>
                                        <span class="ml-2">@Model.User.Phone</span>
                                    </div>
                                    <div class="contact-info flex items-center text-gray-600">
                                        <i class="fas fa-map-marker-alt w-6 text-blue-500"></i>
                                        <span class="ml-2">@Model.User.City, @Model.User.District</span>
                                    </div>
                                    <div class="contact-info flex items-center text-gray-600">
                                        <i class="fas fa-flag w-6 text-blue-500"></i>
                                        <span class="ml-2">@Model.User.Province</span>
                                    </div>
                                </div>
                            </div>
                            <!-- Basic Information -->
                            <div class="info-card bg-white rounded-xl p-6">
                                <h2 class="text-xl font-semibold text-gray-800 mb-4">
                                    <i class="fas fa-building text-blue-600 mr-2"></i>Basic Information
                                </h2>
                                <div class="space-y-4">

                                    <div class="flex items-center text-gray-600">
                                        <i class="fas fa-tags w-8"></i>
                                        <span class="font-medium mr-2">Type:</span>
                                        @Model.Auction.AuctionType
                                    </div>

                                </div>
                            </div>

                            <!-- Financial Details -->
                            <div class="info-card bg-white rounded-xl p-6">
                                <h2 class="text-xl font-semibold text-gray-800 mb-4">
                                    <i class="fas fa-coins text-yellow-600 mr-2"></i>Financial Details
                                </h2>
                                <div class="space-y-4">
                                    <div class="flex items-center text-gray-600">
                                        <i class="fas fa-dollar-sign w-8"></i>
                                        <span class="font-medium mr-2">Budget:</span>
                                        @Model.Auction.StartingPrice.ToString("C")
                                    </div>

                                </div>
                            </div>
                        </div>

                        <!-- Timeline -->
                        <div class="info-card bg-white rounded-xl p-6 mb-8">
                            <h2 class="text-xl font-semibold text-gray-800 mb-6">
                                <i class="fas fa-timeline text-purple-600 mr-2"></i>Timeline
                            </h2>
                            <div class="space-y-6">
                                <div class="timeline-item">
                                    <div class="font-medium text-gray-800">Opening Date & Time</div>
                                    <div class="text-gray-600">
                                        @Model.Auction.StartDate.ToString("MMMM dd, yyyy")  at @Model.Auction.StartTime.ToString("hh:mm tt")
                                    </div>
                                </div>
                                <div class="timeline-item">
                                    <div class="font-medium text-gray-800">Closing Date & Time</div>
                                    <div class="text-gray-600">
                                        @Model.Auction.EndDate.ToString("MMMM dd, yyyy")  at @Model.Auction.EndTime.ToString("hh:mm tt")
                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>

                    <!-- Auction Images Tab -->
                    <div id="auction-tab" class="tab-content">
                        <div class="mb-6">
                            <h2 class="text-xl font-semibold text-gray-800">
                                <i class="fas fa-image text-blue-600 mr-2"></i>Auction Images
                            </h2>
                        </div>
                        <div class="image-gallery">



                            <img src="~/AuctionImage/@Model.Auction.ItemImage" alt="Auction Image 1">
                            <img src="~/AuctionImage/@Model.Auction.ItemImage" alt="Auction Image 2">
                            <img src="~/AuctionImage/@Model.Auction.ItemImage" alt="Auction Image 3">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.verify-btn').forEach(button => {
                button.addEventListener('click', function () {
                    let auctionId = this.getAttribute('data-id');
                    let status = this.getAttribute('data-status'); // Get the current status (Verified or Not Verified)
                    let form = document.getElementById(`verifyForm_${auctionId}`);
                    form.querySelector('input[name="IsVerified"]').value = status; // Set the correct status in the form

                    if (confirm(`Are you sure you want to mark this auction as ${status}?`)) {
                        // Submit the hidden form via AJAX
                        fetch(form.action, {
                            method: form.method,
                            body: new FormData(form),
                            headers: {
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    alert(`Auction ${status} successfully!`);
                                    location.reload(); // Reload page to update status
                                } else {
                                    alert("Failed to update auction status.");
                                }
                            })
                            .catch(error => console.error("Error:", error));
                    }
                });
            });
        });

        function showTab(tabName) {
            const tabs = document.querySelectorAll('.tab-content');
            const buttons = document.querySelectorAll('.tab-btn');

            tabs.forEach(tab => {
                tab.style.opacity = '0';
                setTimeout(() => {
                    tab.style.display = 'none';
                }, 300);
            });

            buttons.forEach(btn => {
                btn.classList.remove('active');
            });

            setTimeout(() => {
                const selectedTab = document.getElementById(`${tabName}-tab`);
                selectedTab.style.display = 'block';
                setTimeout(() => {
                    selectedTab.style.opacity = '1';
                }, 50);
            }, 300);

            document.querySelector(`[onclick="showTab('${tabName}')"]`).classList.add('active');
        }
    </script>
</body>