@model AuctionDetailsViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Monitor Auction - @Model.Auction.Title</title>
    <!-- Flowbite CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <!-- SignalR -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
    <style>
       

        /* Base styles */
        body {
            font-family: 'Inter', system-ui, -apple-system, sans-serif;
            background: #f8fafc;
        }

        .page-container {
            max-width: 1280px;
            margin: 0 auto;
            padding: 2rem;
            animation: fadeIn 0.5s ease-out;
        }

        .bid-card {
            transition: all 0.3s ease;
            animation: slideInUp 0.6s ease-out;
        }

        .bid-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }

        .auction-timer {
            font-family: 'Courier New', monospace;
            font-weight: bold;
        }

        .new-bid-highlight {
            animation: highlight 3s ease;
        }

        .bid-amount {
            font-weight: bold;
            color: #1e40af;
        }

        .auction-image {
            max-height: 300px;
            object-fit: contain;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .auction-image:hover {
            transform: scale(1.02);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .status-badge {
            padding: 0.35rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.35rem;
            transition: all 0.3s ease;
        }

        .status-badge:hover {
            transform: translateY(-2px);
        }

        .status-badge-pending {
            background-color: #f59e0b;
            color: white;
        }

        .status-badge-accepted {
            background-color: #10b981;
            color: white;
        }

        .status-badge-rejected {
            background-color: #ef4444;
            color: white;
        }

        .action-button {
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 0.375rem;
            transition: all 0.2s ease;
        }

        .action-button:hover {
            transform: translateY(-2px);
            background-color: #f3f4f6;
        }

        .monitor-button {
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(59, 130, 246, 0.25);
        }

        .monitor-button:hover {
            background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 10px rgba(37, 99, 235, 0.3);
        }

        .refresh-button {
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(59, 130, 246, 0.25);
        }

        .refresh-button:hover {
            background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 10px rgba(37, 99, 235, 0.3);
        }

       
        .animate-fade-in-down {
            animation: fadeInDown 0.5s ease-out;
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8 max-w-7xl">
        <!-- Back Button -->
        <div class="mb-6">
            <a asp-action="AuctionDetails" asp-controller="PublisherAuction" asp-route-id="@Model.Auction.EncId" class="text-gray-600 hover:text-gray-800 transition-all duration-300 flex items-center gap-2 hover:translate-x-[-5px]">
                <i class="fas fa-arrow-left text-xl"></i>
                <span class="font-medium">Back</span>
            </a>
        </div>

        <!-- Auction Header -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-6 bid-card">
            <div class="flex flex-col md:flex-row items-start md:items-center justify-between mb-4">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">@Model.Auction.Title</h1>
                    <p class="text-gray-600 mt-2">@Model.Auction.AuctionDescription</p>
                </div>

                <div class="mt-4 md:mt-0 flex flex-col items-end">
                    <div class="bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full mb-2 flex items-center">
                        <i class="fas fa-gavel mr-1"></i> @Model.Auction.AuctionType
                    </div>
                    <div class="bg-green-100 text-green-800 text-sm font-medium px-3 py-1 rounded-full flex items-center">
                        <i class="fas fa-tag mr-1"></i> Status: @Model.Auction.AuctionStatus
                    </div>
                </div>
            </div>

            <div class="flex flex-col md:flex-row">
                <!-- Auction Image -->
                <div class="w-full md:w-1/3 mb-4 md:mb-0 md:pr-6">
                    @if (!string.IsNullOrEmpty(Model.Auction.ItemImage))
                    {
                        <img src="~/AuctionImage/@Model.Auction.ItemImage" alt="@Model.Auction.Title" class="auction-image w-full">
                    }
                    else
                    {
                        <div class="bg-gray-200 rounded-lg flex items-center justify-center h-64 w-full">
                            <i class="fas fa-image text-gray-400 text-6xl"></i>
                        </div>
                    }
                </div>

                <!-- Auction Details -->
                <div class="w-full md:w-2/3">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div class="bg-gray-50 rounded-lg p-4 shadow-sm hover:shadow-md transition-all duration-300">
                            <h3 class="text-lg font-medium text-gray-900 mb-2 flex items-center">
                                <i class="fas fa-calendar-alt mr-2 text-blue-600"></i> Auction Schedule
                            </h3>
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-600">Start:</span>
                                <span class="font-medium">@Model.Auction.StartDate.ToString("MMM d, yyyy") at @Model.Auction.StartTime</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600">End:</span>
                                <span class="font-medium">@Model.Auction.EndDate.ToString("MMM d, yyyy") at @Model.Auction.EndTime</span>
                            </div>
                        </div>

                        <div class="bg-gray-50 rounded-lg p-4 shadow-sm hover:shadow-md transition-all duration-300">
                            <h3 class="text-lg font-medium text-gray-900 mb-2 flex items-center">
                                <i class="fas fa-rupee-sign mr-2 text-green-600"></i> Bid Information
                            </h3>
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-600">Starting Price:</span>
                                <span class="font-medium">₹@Model.Auction.StartingPrice.ToString("N2")</span>
                            </div>
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-600">Current Highest:</span>
                                <span id="highestBid" class="font-bold text-blue-600">
                                    @if (Model.AuctionBid != null && Model.AuctionBid.Any())
                                    {
                                        <text>₹@Model.HighestBidAmount.ToString("N2")</text>
                                    }
                                    else
                                    {
                                        <text>₹@Model.Auction.StartingPrice.ToString("N2")</text>
                                    }
                                </span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600">Total Bids:</span>
                                <span id="totalBids" class="font-medium">@(Model.AuctionBid != null ? Model.AuctionBid.Count : 0)</span>
                            </div>

                            <a asp-action="UserBid" asp-controller="PublisherAuction" asp-route-id="@Model.Auction.EncId"
                               class="monitor-button mt-4 w-full justify-center">
                                <i class="fas fa-paper-plane mr-2"></i>
                                Monitor Now
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bid History -->
        <div class="bg-white rounded-lg shadow-md p-6 bid-card">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-2xl font-bold text-gray-900 flex items-center">
                    <i class="fas fa-history mr-2 text-blue-600"></i> Bid History
                </h2>
                <div>
                    <button id="refreshBids" class="refresh-button">
                        <i class="fas fa-sync-alt mr-2"></i> Refresh
                    </button>
                </div>
            </div>

            <div class="overflow-x-auto relative">
                <table class="w-full text-sm text-left text-gray-500">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-100">
                        <tr>
                            <th scope="col" class="py-3 px-6">Bidder</th>
                            <th scope="col" class="py-3 px-6">Bid Amount</th>
                            <th scope="col" class="py-3 px-6">Date & Time</th>
                            <th scope="col" class="py-3 px-6">Status</th>
                            <th scope="col" class="py-3 px-6">Bidding Details</th>
                            <th scope="col" class="py-3 px-6">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="bidHistory">
                        @foreach (var bid in Model.AuctionBid)
                        {
                            <tr class="bg-white border-b hover:bg-gray-50 transition-all duration-200">
                                <td class="py-4 px-6 font-medium text-gray-900">
                                    @if (bid.BidderName != null && bid.BidderName.Any())
                                    {
                                        var user = bid.BidderName.First();
                                        string fullName = $"{user.FirstName} {(string.IsNullOrEmpty(user.MiddleName) ? "" : user.MiddleName + " ")}{user.LastName}";
                                        <div class="flex items-center">
                                            <div class="h-10 w-10 flex-shrink-0 mr-3 bg-blue-100 rounded-full flex items-center justify-center">
                                                <span class="text-blue-800 font-bold">@(string.IsNullOrEmpty(fullName) ? "?" : fullName[0].ToString().ToUpper())</span>
                                            </div>
                                            <div>
                                                <div class="font-medium text-gray-900">@fullName</div>
                                                <div class="text-xs text-gray-500">ID: @bid.BidderId</div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="flex items-center">
                                            <div class="h-10 w-10 flex-shrink-0 mr-3 bg-gray-100 rounded-full flex items-center justify-center">
                                                <span class="text-gray-500 font-bold">?</span>
                                            </div>
                                            <div>
                                                <div class="font-medium text-gray-900">Unknown</div>
                                                <div class="text-xs text-gray-500">ID: @bid.BidderId</div>
                                            </div>
                                        </div>
                                    }
                                </td>
                                <td class="py-4 px-6 bid-amount">₹@bid.BidAmount.ToString("N2")</td>
                                <td class="py-4 px-6">
                                    <div class="text-gray-900">@bid.BidDate.ToString("MMM d, yyyy")</div>
                                    <div class="text-xs text-gray-500">@bid.BidTime</div>
                                </td>
                                <td class="py-4 px-6">
                                    @{
                                        string statusClass = bid.BidStatus.ToLower() == "pending" ? "status-badge-pending" :
                                        bid.BidStatus.ToLower() == "accepted" ? "status-badge-accepted" :
                                        "status-badge-rejected";
                                        string statusIcon = bid.BidStatus.ToLower() == "pending" ? "fa-clock" :
                                        bid.BidStatus.ToLower() == "accepted" ? "fa-check-circle" :
                                        "fa-times-circle";
                                    }
                                    <span class="@statusClass status-badge">
                                        <i class="fas @statusIcon"></i> @bid.BidStatus
                                    </span>
                                </td>
                                <td class="py-4 px-6">
                                    @if (bid.Bids != null && bid.Bids.Any())
                                    {
                                        <button type="button" data-dropdown-toggle="dropdown-@bid.BidId" class="text-blue-700 border border-blue-700 hover:bg-blue-700 hover:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-xs px-3 py-1.5 text-center inline-flex items-center">
                                            <i class="fas fa-list-ul mr-1"></i> View @bid.Bids.Count Bids
                                        </button>
                                        <div id="dropdown-@bid.BidId" class="hidden z-10 w-auto bg-white rounded divide-y divide-gray-100 shadow">
                                            <ul class="py-1 text-sm text-gray-700" aria-labelledby="dropdownDefault">
                                                @foreach (var bidding in bid.Bids)
                                                {
                                                    <li class="py-2 px-4 hover:bg-gray-100">
                                                        <div class="flex justify-between">
                                                            
                                                            <span class="font-medium text-blue-600">₹@bidding.BiddingAmount.ToString("N2")</span>
                                                        </div>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-gray-400 italic text-sm">No additional bids</span>
                                    }
                                </td>
                                <td class="py-4 px-6">
                                    <a asp-action="BiddingDetails" asp-controller="PublisherAuction" asp-route-id="@bid.EncId"
                                       class="text-blue-600 hover:text-blue-800 action-button mx-auto" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.AuctionBid == null || !Model.AuctionBid.Any())
            {
                <div class="text-center py-10">
                    <div class="text-gray-400 mb-3">
                        <i class="fas fa-gavel text-5xl"></i>
                    </div>
                    <h3 class="text-lg font-medium text-gray-900 mb-1">No Bids Yet</h3>
                    <p class="text-gray-500">Be the first to place a bid on this auction!</p>
                </div>
            }
        </div>
    </div>

    <!-- Toast Container -->
    <div id="toast-container"></div>

    <!-- Flowbite JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.js"></script>

    <script>
        // SignalR connection
        var connection = new signalR.HubConnectionBuilder().withUrl("/auctionHub").build();

        connection.on("ReceiveBid", function (auctionId, userId, bidAmount, bidTime) {
            // Format the bid time
            var formattedTime = new Date(bidTime).toLocaleString();

            // Create a new bid row with improved styling
            var newRow = `
                <tr class="bg-white border-b hover:bg-gray-50 new-bid-highlight">
                    <td class="py-4 px-6 font-medium text-gray-900">
                        <div class="flex items-center">
                            <div class="h-10 w-10 flex-shrink-0 mr-3 bg-blue-100 rounded-full flex items-center justify-center">
                                <span class="text-blue-800 font-bold">?</span>
                            </div>
                            <div>
                                <div class="font-medium text-gray-900">Unknown</div>
                                <div class="text-xs text-gray-500">ID: ${userId}</div>
                            </div>
                        </div>
                    </td>
                    <td class="py-4 px-6 bid-amount">₹${parseFloat(bidAmount).toFixed(2)}</td>
                    <td class="py-4 px-6">
                        <div class="text-gray-900">${new Date(bidTime).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</div>
                        <div class="text-xs text-gray-500">${new Date(bidTime).toLocaleTimeString()}</div>
                    </td>
                    <td class="py-4 px-6">
                        <span class="status-badge status-badge-pending">
                            <i class="fas fa-clock mr-1"></i> Pending
                        </span>
                    </td>
                    <td class="py-4 px-6">
                        <span class="text-gray-400 italic text-sm">No additional bids</span>
                    </td>
                    <td class="py-4 px-6">
                        <a href="#" class="text-blue-600 hover:text-blue-800 action-button mx-auto" title="View Details">
                            <i class="fas fa-eye"></i>
                        </a>
                    </td>
                </tr>`;

            // Insert the new row at the top of the table
            document.getElementById("bidHistory").insertAdjacentHTML("afterbegin", newRow);

            // Update the highest bid if this is higher
            var highestBidElement = document.getElementById("highestBid");
            var currentHighestText = highestBidElement.textContent;
            var currentHighest = parseFloat(currentHighestText.replace(/[^0-9.]/g, ''));
            
            if (parseFloat(bidAmount) > currentHighest) {
                highestBidElement.textContent = 'Highest Bid: ₹' + parseFloat(bidAmount).toFixed(2);
            }

            // Update total bids count
            var totalBidsElement = document.getElementById("totalBids");
            var currentTotal = parseInt(totalBidsElement.textContent);
            totalBidsElement.textContent = (currentTotal + 1).toString();
        });

        // Start the connection
        connection.start().catch(err => console.error(err.toString()));

        // Handle refresh button
        document.getElementById('refreshBids').addEventListener('click', function() {
            // Add rotation animation to refresh icon
            this.querySelector('i').classList.add('fa-spin');

            // Simulate refresh delay (in real app, this would be an actual data refresh)
            setTimeout(() => {
                this.querySelector('i').classList.remove('fa-spin');

                // Show toast notification
                const toast = document.createElement('div');
                toast.innerHTML = `
                    <div id="toast-success" class="flex items-center p-4 mb-4 w-full max-w-xs text-gray-500 bg-white rounded-lg shadow fixed top-5 right-5 animate-fade-in-down" role="alert">
                        <div class="inline-flex flex-shrink-0 justify-center items-center w-8 h-8 text-green-500 bg-green-100 rounded-lg">
                            <i class="fas fa-check"></i>
                        </div>
                        <div class="ml-3 text-sm font-normal">Bid list refreshed successfully.</div>
                        <button type="button" class="ml-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex h-8 w-8" data-dismiss-target="#toast-success" aria-label="Close">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;
                document.getElementById('toast-container').appendChild(toast);

                // Remove toast after 3 seconds
                setTimeout(() => {
                    const toastElement = document.getElementById('toast-success');
                    if (toastElement) {
                        toastElement.remove();
                    }
                }, 3000);
            }, 700);
        });
    </script>
</body>
</html>