<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bidding Details</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 9999px;
            font-weight: 600;
            text-align: center;
            transition: all 0.3s ease;
        }

        .status-won {
            background-color: #DEF7EC;
            color: #03543F;
            border: 1px solid #31C48D;
        }

        .status-lost {
            background-color: #FDE8E8;
            color: #9B1C1C;
            border: 1px solid #F98080;
        }

        .status-pending {
            background-color: #FEF3C7;
            color: #92400E;
            border: 1px solid #FBBF24;
        }

        .section-card {
            transition: all 0.3s ease;
            background: white;
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .section-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 12px -1px rgba(0, 0, 0, 0.1);
        }

        .info-label {
            color: #6B7280;
            font-size: 0.875rem;
            margin-bottom: 0.25rem;
        }

        .info-value {
            color: #111827;
            font-weight: 500;
        }

        .award-btn {
            transition: all 0.3s ease;
        }

        .award-btn:hover {
            transform: scale(1.05);
        }

        .auction-header {
            background: linear-gradient(to right, #4A116B, #845EC2);
            color: white;
        }

        .styled-position {
            font-family: 'Roboto', sans-serif;
            font-weight: bold;
            font-size: 1.2rem;
            color: #2c3e50;
            background-color: #ecf0f1;
            padding: 5px 10px;
            border-radius: 5px;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .styled-position:hover {
            color: #3498db;
            background-color: #f4f6f7;
            cursor: pointer;
        }

        .bid-history-item {
            transition: all 0.2s ease;
        }

        .bid-history-item:hover {
            background-color: #F9FAFB;
        }

        .highest-bid {
            background-color: #ECFDF5;
            border-left: 4px solid #10B981;
        }

        .auction-countdown {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1rem;
            border-radius: 0.5rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .action-button {
            display: inline-flex;
            align-items: center;
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            font-weight: 500;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .action-button:hover {
            transform: translateY(-2px);
        }

        .item-image {
            width: 100%;
            height: 240px;
            object-fit: cover;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .item-image:hover {
            transform: scale(1.02);
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">

    <div class="container mx-auto px-4">
        <div class="container mx-auto px-4 py-4">
            <a asp-action="MonitorAuction" asp-controller="PublisherAuction" asp-route-id="@Model.Auction.EncId" class="flex items-center text-purple-600 hover:text-purple-800 font-semibold">
                <i class="fas fa-arrow-left mr-2"></i> Back
            </a>
        </div>
        <!-- Top Status Bar -->
        <div class="section-card mb-8">
            <div class="auction-header p-6">
                <div class="flex justify-between items-start">
                    <div>
                        <h1 class="text-2xl font-bold mb-2">@Model.Auction.Title</h1>
                        <p class="text-purple-100">Bid ID: @Model.AuctionBidEdit.AuctionBidId</p>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="status-badge @(Model.AuctionBidEdit.BidStatus.ToLower() == "won" ? "status-won" :
                                              Model.AuctionBidEdit.BidStatus.ToLower() == "lost" ? "status-lost" :
                                              "status-pending")">
                            @Model.AuctionBidEdit.BidStatus
                        </span>
                        @if (Model.AuctionBidEdit.BidStatus == "Pending")
                        {
                            <div class="relative inline-block">
                                <button class="btn text-purple-600 hover:text-purple-900 award-dropdown-btn" title="Award Bid">
                                    <i class="fas fa-trophy"></i>
                                </button>
                                <div class="hidden absolute bg-white shadow-md border rounded-md p-2 mt-2 w-32 award-dropdown">
                                    <button class="block w-full text-left px-3 py-1 text-green-600 hover:bg-gray-200 award-btn" data-id="@Model.AuctionBidEdit.BidId" data-status="Accepted">🏆 Won</button>
                                    <button class="block w-full text-left px-3 py-1 text-red-600 hover:bg-gray-200 award-btn" data-id="@Model.AuctionBidEdit.BidId" data-status="Rejected">❌ Lost</button>
                                </div>
                            </div>


                            <!-- Hidden Form for AJAX Submission -->
                            <form id="awardForm_@Model.AuctionBidEdit.BidId" class="hidden" method="POST" asp-action="AwardBid" asp-controller="PublisherAuction">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="BidId" value="@Model.AuctionBidEdit.BidId" />
                                <input type="hidden" name="BidStatus" />
                            </form>
                        }
                    </div>
                </div>
            </div>
            <div class="p-6 grid grid-cols-1 md:grid-cols-3 gap-6">

                @if (Model.AuctionBidEdit.BidStatus == "Accepted")
                {
                    <a asp-action="Index" asp-controller="AuctionContract" asp-route-id="@Model.AuctionBidEdit.EncId"
                       class="action-button bg-purple-600 text-white hover:bg-purple-700 flex items-center justify-center">
                        <i class="fas fa-file-contract mr-2"></i>
                         Contract now
                    </a>
                }
                
                <div>
                    <p class="info-label">Auction Type</p>
                    <p class="info-value"><i class="fas fa-gavel mr-2 text-purple-600"></i>@Model.Auction.AuctionType</p>
                </div>
                <div>
                    <p class="info-label">Starting Price</p>
                    <p class="info-value"><i class="fas fa-money-bill mr-2 text-green-600"></i>Rs.@Model.Auction.StartingPrice.ToString("N2")</p>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Auction Details -->
            <div class="section-card p-6">
                <!-- Header Section -->
                <div class="flex items-center justify-between mb-8 pb-4 border-b border-gray-200">
                    <div class="flex items-center space-x-4">
                        <div class="bg-purple-100 p-3 rounded-lg">
                            <i class="fas fa-gavel text-2xl text-purple-600"></i>
                        </div>
                        <div>
                            <h2 class="text-2xl font-semibold text-gray-900">Auction Details</h2>
                            <p class="text-gray-500 text-sm mt-1">Information about the auction item</p>
                        </div>
                    </div>
                    <div class="flex items-center space-x-2">
                        <span class="px-4 py-2 bg-purple-100 text-purple-800 rounded-full font-medium flex items-center">
                            <i class="fas fa-tag mr-2"></i>
                            @Model.Auction.AuctionType
                        </span>
                        <span class="px-4 py-2 bg-@(Model.Auction.AuctionStatus.ToLower() == "active" ? "green" : "red")-100 text-@(Model.Auction.AuctionStatus.ToLower() == "active" ? "green" : "red")-800 rounded-full font-medium flex items-center">
                            <i class="fas fa-circle mr-2 text-xs"></i>
                            @Model.Auction.AuctionStatus
                        </span>
                    </div>
                </div>

                <!-- Auction Item Image -->
                <div class="mb-8">
                    @if (string.IsNullOrEmpty(Model.Auction.ItemImage))
                    {
                        <div class="w-full h-60 bg-gray-200 flex items-center justify-center rounded-lg">
                            <i class="fas fa-image text-gray-400 text-6xl"></i>
                        </div>
                    }
                    else
                    {
                        <img src="~/AuctionImage/@Model.Auction.ItemImage"
                             alt="@Model.Auction.Title"
                             class="item-image">
                    }
                </div>

                <!-- Auction Information Grid -->
                <div class="grid grid-cols-2 gap-6">
                    <div class="bg-gray-50 p-4 rounded-lg">
                        <div class="flex items-start space-x-3">
                            <div class="mt-1">
                                <i class="fas fa-calendar-alt text-purple-600"></i>
                            </div>
                            <div>
                                <p class="text-sm text-gray-600 mb-1">Start Date</p>
                                <p class="text-lg font-semibold text-gray-900">@Model.Auction.StartDate.ToShortDateString()</p>
                                <p class="text-sm text-gray-500">@Model.Auction.StartTime</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-gray-50 p-4 rounded-lg">
                        <div class="flex items-start space-x-3">
                            <div class="mt-1">
                                <i class="fas fa-calendar-check text-purple-600"></i>
                            </div>
                            <div>
                                <p class="text-sm text-gray-600 mb-1">End Date</p>
                                <p class="text-lg font-semibold text-gray-900">@Model.Auction.EndDate.ToShortDateString()</p>
                                <p class="text-sm text-gray-500">@Model.Auction.EndTime</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-gray-50 p-4 rounded-lg col-span-2">
                        <div class="flex items-start space-x-3">
                            <div class="mt-1">
                                <i class="fas fa-align-left text-purple-600"></i>
                            </div>
                            <div>
                                <p class="text-sm text-gray-600 mb-1">Description</p>
                                <p class="text-gray-900">@Model.Auction.AuctionDescription</p>
                            </div>
                        </div>
                    </div>
                </div>

                
            </div>

            <!-- Bid Details Section -->
            <div class="section-card p-6">
                <h2 class="text-xl font-semibold text-gray-900 mb-6">
                    <i class="fas fa-hand-holding-usd mr-2 text-purple-600"></i>Bid Details
                </h2>

                <div class="space-y-6">
                    <div class="bg-gray-50 p-4 rounded-lg">
                        <div class="info-label">Current Bid Amount</div>
                        <div class="info-value text-green-600 text-2xl font-bold">
                            Rs.@Model.AuctionBidEdit.BidAmount.ToString("N2")
                        </div>
                    </div>

                    <div class="bg-gray-50 p-4 rounded-lg">
                        <div class="info-label">Bid Date & Time</div>
                        <div class="info-value">
                            @Model.AuctionBidEdit.BidDate.ToShortDateString() at @Model.AuctionBidEdit.BidTime
                        </div>
                    </div>

                    <div class="bg-gray-50 p-4 rounded-lg">
                        <div class="info-label">Bid Status</div>
                        <div class="info-value">
                            <span class="px-4 py-2 bg-@(Model.AuctionBidEdit.BidStatus.ToLower() == "won" ? "green" :
                                                      Model.AuctionBidEdit.BidStatus.ToLower() == "lost" ? "red" : "yellow")-100
                                text-@(Model.AuctionBidEdit.BidStatus.ToLower() == "won" ? "green" :
                                      Model.AuctionBidEdit.BidStatus.ToLower() == "lost" ? "red" : "yellow")-800
                                rounded-full font-medium">
                                @Model.AuctionBidEdit.BidStatus
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Bid History Section -->
                <div class="mt-8">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                        <i class="fas fa-history mr-2 text-purple-600"></i>Bid History
                    </h3>

                    @if (Model.Bid != null && Model.Bid.Count > 0)
                    {
                        <div class="space-y-2">
                            

                            @foreach (var bid in Model.Bid)
                            {
                                <div class="bid-history-item p-3 rounded-lg border">
                                    <div class="flex justify-between items-center">
                                        <div>
                                            <span class="font-semibold">Rs.@bid.BiddingAmount.ToString("N2")</span>

                                            @if (bid.BiddingAmount == Model.HighestBidAmount)
                                            {
                                                <span class="ml-2 text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full">Highest</span>
                                            }
                                        </div>
                                        
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-gray-500 italic">No bid history available</div>
                    }

                </div>
            </div>

            <!-- Bidder Details -->
            <div class="section-card p-6">
                <h2 class="text-xl font-semibold text-gray-900 mb-6">
                    <i class="fas fa-user mr-2 text-purple-600"></i>Bidder Details
                </h2>
                <a asp-action="UserMessage" asp-controller="Chat" asp-route-receiverId="@Model.User.UserId"
                   class="inline-flex items-center px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-all duration-300 shadow-md hover:shadow-lg">
                    <i class="fas fa-envelope mr-2"></i>
                    Send Message
                </a>
                <div class="flex gap-6">
                    <!-- Profile Image Section -->
                    <div class="flex-shrink-0">
                        <div class="relative w-48 h-48 rounded-lg overflow-hidden shadow-lg border-4 border-white">
                            @if (string.IsNullOrEmpty(Model.User.UserPhoto))
                            {
                                <div class="w-full h-full bg-gray-200 flex items-center justify-center">
                                    <i class="fas fa-user-circle text-gray-400 text-6xl"></i>
                                </div>
                            }
                            else
                            {
                                <img src="~/UserImage/@Model.User.UserPhoto"
                                     alt="@Model.User.FirstName's photo"
                                     class="w-full h-full object-cover"
                                     onerror="this.onerror=null; this.src='path/to/default-image.jpg';">
                            }
                            <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/50 to-transparent p-2">
                                <span class="text-white text-sm font-medium">
                                    <i class="fas fa-circle text-green-400 text-xs mr-1"></i>Bidder
                                </span>
                            </div>
                        </div>
                    </div>

                    <!-- Details Section -->
                    <div class="flex-grow grid grid-cols-2 gap-6">
                        <div class="space-y-4">
                            <div>
                                <p class="info-label">Name</p>
                                <p class="info-value text-lg">
                                    @Model.User.FirstName @Model.User.MiddleName @Model.User.LastName
                                </p>
                            </div>
                            <div>
                                <p class="info-label">Contact</p>
                                <p class="info-value">
                                    <i class="fas fa-envelope mr-2 text-purple-600"></i>@Model.User.EmailAddress<br>
                                    <i class="fas fa-phone mr-2 text-purple-600"></i>@Model.User.Phone
                                </p>
                            </div>
                            <div>
                                <p class="info-label">Role</p>
                                <p class="info-value">
                                    <span class="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm">
                                        @Model.User.UserRole
                                    </span>
                                </p>
                            </div>
                        </div>
                        <div class="space-y-4">
                            <div>
                                <p class="info-label">Location</p>
                                <div class="info-value">
                                    <p class="flex items-center">
                                        <i class="fas fa-map-marker-alt mr-2 text-red-500"></i>
                                        @Model.User.Province
                                    </p>
                                    <p class="ml-5">@Model.User.District, @Model.User.City</p>
                                </div>
                            </div>
                            <div>
                                <p class="info-label">Verification Status</p>
                                <p class="info-value">
                                    <span class="inline-flex items-center">
                                        <i class="fas fa-check-circle text-green-500 mr-2"></i>
                                        Verified Account
                                    </span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Toggle dropdown visibility
            document.querySelectorAll('.award-dropdown-btn').forEach(button => {
                button.addEventListener('click', function (event) {
                    event.stopPropagation(); // Prevents immediate closing
                    let dropdown = this.nextElementSibling;
                    dropdown.classList.toggle('hidden');
                });
            });

            // Prevent dropdown from closing when clicking inside
            document.querySelectorAll('.award-dropdown').forEach(dropdown => {
                dropdown.addEventListener('click', function (event) {
                    event.stopPropagation(); // Prevents closing when clicking inside the dropdown
                });
            });

            // Close dropdown when clicking outside
            document.addEventListener('click', function () {
                document.querySelectorAll('.award-dropdown').forEach(dropdown => {
                    dropdown.classList.add('hidden');
                });
            });
        
            // Award Tender Status Update
            document.querySelectorAll('.award-btn').forEach(button => {
                button.addEventListener('click', function () {
                    let bidId = this.getAttribute('data-id');
                    let bidStatus = this.getAttribute('data-status');
                    let form = document.getElementById(`awardForm_${bidId}`);
                    let formData = new FormData(form);
                    formData.set('BidStatus', bidStatus);

                    if (confirm(`Are you sure you want to mark this Bidder as '${bidStatus}'?`)) {
                        fetch(form.action, {
                            method: form.method,
                            body: formData,
                            headers: {
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    let alertMessage = `Auction marked as '${bidStatus}' successfully!`;

                                    // If the status is "Won", show the contract message
                                    if (bidStatus === "Accepted") {
                                        alertMessage += "\nContract has been generated.";
                                    }

                                    alert(alertMessage); // Show the combined message
                                    location.reload();


                                } else {
                                    alert("Failed to update award status: " + data.message);
                                }
                            })
                            .catch(error => console.error("Error:", error));
                    }
                });
            });
        

            // Countdown Timer Logic (if applicable)
            const endDateStr = '@Model.Auction.EndDate.ToString("yyyy-MM-dd")';
            const endTimeStr = '@Model.Auction.EndTime';

            if (endDateStr && endTimeStr) {
                const [hours, minutes] = endTimeStr.split(':');
                const endDate = new Date(endDateStr);
                endDate.setHours(parseInt(hours), parseInt(minutes), 0);

                const countdownInterval = setInterval(function() {
                    const now = new Date();
                    const difference = endDate - now;

                    if (difference <= 0) {
                        // Auction has ended
                        clearInterval(countdownInterval);
                        document.getElementById('days').textContent = '0';
                        document.getElementById('hours').textContent = '0';
                        document.getElementById('minutes').textContent = '0';
                        document.getElementById('seconds').textContent = '0';
                        return;
                    }

                    const days = Math.floor(difference / (1000 * 60 * 60 * 24));
                    const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
                    const seconds = Math.floor((difference % (1000 * 60)) / 1000);

                    document.getElementById('days').textContent = days;
                    document.getElementById('hours').textContent = hours;
                    document.getElementById('minutes').textContent = minutes;
                    document.getElementById('seconds').textContent = seconds;
                }, 1000);
            }
        });

            function autoAwardBid(bidId) {
                // Get the CSRF token
                var token = $('input[name="__RequestVerificationToken"]').val();
    
                $.ajax({
                    url: '@Url.Action("AwardBid", "PublisherAuction")',
                    type: 'POST',
                    data: {
                        BidId: bidId,
                        BidStatus: 'Accepted',
                        __RequestVerificationToken: token
                    },
                    success: function(response) {
                        if (response.success) {
                            // Show success message
                            alert('Bid awarded successfully!');
                            
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert('Error occurred while awarding bid');
                    }
                });
            }

            // Function to check auction status and auto-award
            function checkAndAwardBid() {
                var currentDate = new Date();
                var endDate = new Date('@Model.Auction.EndDate.ToString("yyyy-MM-dd") @Model.Auction.EndTime.ToString("HH:mm:ss")');
                var auctionStatus = '@Model.Auction.AuctionStatus';
                var bidStatus = '@Model.AuctionBidEdit.BidStatus';
                var bidId = '@Model.AuctionBidEdit.BidId';
    
                if (currentDate >= endDate && auctionStatus === 'Completed' && bidStatus === 'Pending') {
                    // Check if this is the highest bid
                    var highestBidAmount = @Model.HighestBidAmount;
                    var currentBidAmount = @Model.AuctionBidEdit.BidAmount;
        
                    if (currentBidAmount >= highestBidAmount) {
                        autoAwardBid(bidId);
                    }
                }
            }

            // Check every minute
            setInterval(checkAndAwardBid, 60000);

            // Initial check when page loads
            $(document).ready(function() {
                checkAndAwardBid();
            });

    </script>
</body>
</html>