// <auto-generated />
using System;
using FYPBidNetra.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FYPBidNetra.Migrations
{
    [DbContext(typeof(FypContext))]
    [Migration("20250412105840_PayCompany")]
    partial class PayCompany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FYPBidNetra.Models.AuctionBid", b =>
                {
                    b.Property<short>("BidId")
                        .HasColumnType("smallint");

                    b.Property<short>("AuctionBidId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly>("BidDate")
                        .HasColumnType("date");

                    b.Property<string>("BidStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeOnly>("BidTime")
                        .HasColumnType("time");

                    b.Property<short>("BidderId")
                        .HasColumnType("smallint");

                    b.HasKey("BidId")
                        .HasName("PK__AuctionB__4A733D923753E8AC");

                    b.HasIndex("AuctionBidId");

                    b.HasIndex("BidderId");

                    b.ToTable("AuctionBid", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.AuctionDetail", b =>
                {
                    b.Property<short>("AuctionId")
                        .HasColumnType("smallint");

                    b.Property<string>("AuctionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuctionStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AuctionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AwardStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("BuyerId")
                        .HasColumnType("smallint")
                        .HasColumnName("BuyerID");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("IsVerified")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("PublishedByUserId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("WinningBidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("AuctionId")
                        .HasName("PK__AuctionD__51004A4C300F03F9");

                    b.HasIndex("BuyerId");

                    b.HasIndex("PublishedByUserId");

                    b.ToTable("AuctionDetails");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Bank", b =>
                {
                    b.Property<short>("BankId")
                        .HasColumnType("smallint");

                    b.Property<string>("AccountHolderName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<short?>("UserbankId")
                        .HasColumnType("smallint");

                    b.HasKey("BankId")
                        .HasName("PK__Bank__AA08CB1384CE4B25");

                    b.HasIndex("UserbankId");

                    b.ToTable("Bank", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.Bid", b =>
                {
                    b.Property<short>("BiddingId")
                        .HasColumnType("smallint");

                    b.Property<short>("AucBidId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("BiddingAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("BiddingId")
                        .HasName("PK__Bid__B1AE7D4789F35230");

                    b.HasIndex("AucBidId");

                    b.ToTable("Bid", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.BlogContent", b =>
                {
                    b.Property<short>("Bid")
                        .HasColumnType("smallint")
                        .HasColumnName("BId");

                    b.Property<DateOnly>("Postdate")
                        .HasColumnType("date");

                    b.Property<string>("SectionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionHeading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("UploadUserId")
                        .HasColumnType("smallint");

                    b.HasKey("Bid")
                        .HasName("PK__BlogCont__C6DE0CC10B06795F");

                    b.HasIndex("UploadUserId");

                    b.ToTable("BlogContent", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.Chat", b =>
                {
                    b.Property<short>("ChatId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MessageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ReceiverId")
                        .HasColumnType("smallint");

                    b.Property<short>("SenderId")
                        .HasColumnType("smallint");

                    b.HasKey("ChatId")
                        .HasName("PK__Chat__A9FBE7C61D2FB1CF");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Chat", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.Company", b =>
                {
                    b.Property<short>("CompanyId")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyWebsiteUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("OfficeEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PanDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(3, 2)");

                    b.Property<string>("RegistrationDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("UserbidId")
                        .HasColumnType("smallint");

                    b.HasKey("CompanyId")
                        .HasName("PK__Company__2D971CACA5D04071");

                    b.HasIndex("UserbidId");

                    b.HasIndex(new[] { "PanNumber" }, "UQ__Company__7C38BFC873608A91")
                        .IsUnique()
                        .HasFilter("[PanNumber] IS NOT NULL");

                    b.HasIndex(new[] { "RegistrationNumber" }, "UQ__Company__E8864602125AF5CE")
                        .IsUnique()
                        .HasFilter("[RegistrationNumber] IS NOT NULL");

                    b.HasIndex(new[] { "OfficeEmail" }, "UQ__Company__FCEC3C7289C86E63")
                        .IsUnique()
                        .HasFilter("[OfficeEmail] IS NOT NULL");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.ContractDetail", b =>
                {
                    b.Property<short>("ContractId")
                        .HasColumnType("smallint");

                    b.Property<short>("BuyerId")
                        .HasColumnType("smallint")
                        .HasColumnName("BuyerID");

                    b.Property<string>("BuyerSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("ConAuctionId")
                        .HasColumnType("smallint");

                    b.Property<short?>("ConCompanyId")
                        .HasColumnType("smallint");

                    b.Property<short?>("ConTenderId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly>("ContractCreateDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("SellerId")
                        .HasColumnType("smallint")
                        .HasColumnName("SellerID");

                    b.Property<string>("SellerSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SignedByBuyer")
                        .HasColumnType("bit");

                    b.Property<bool>("SignedBySeller")
                        .HasColumnType("bit");

                    b.HasKey("ContractId")
                        .HasName("PK__Contract__C90D3469ED83092C");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ConAuctionId");

                    b.HasIndex("ConCompanyId");

                    b.HasIndex("ConTenderId");

                    b.HasIndex("SellerId");

                    b.ToTable("ContractDetails");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Payment", b =>
                {
                    b.Property<short>("PaymentId")
                        .HasColumnType("smallint");

                    b.Property<short?>("PayAuctionId")
                        .HasColumnType("smallint");

                    b.Property<short>("PayByUser")
                        .HasColumnType("smallint");

                    b.Property<short?>("PayCompanyId")
                        .HasColumnType("smallint");

                    b.Property<short?>("PayTenderId")
                        .HasColumnType("smallint");

                    b.Property<short>("PayToUser")
                        .HasColumnType("smallint");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SlipUpload")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A38C6C820DE");

                    b.HasIndex("PayAuctionId");

                    b.HasIndex("PayByUser");

                    b.HasIndex("PayCompanyId");

                    b.HasIndex("PayTenderId");

                    b.HasIndex("PayToUser");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.Rating", b =>
                {
                    b.Property<short>("RatingId")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("DECIMAL(3,2)");

                    b.Property<decimal?>("Rating1")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("Rating");

                    b.Property<short?>("RatingBy")
                        .HasColumnType("smallint");

                    b.Property<string>("RatingDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("RatingFor")
                        .HasColumnType("smallint");

                    b.HasKey("RatingId")
                        .HasName("PK__Rating__FCCDF87C937449F8");

                    b.HasIndex("RatingBy");

                    b.HasIndex("RatingFor");

                    b.ToTable("Rating", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.TenderApplication", b =>
                {
                    b.Property<short>("ApplicationId")
                        .HasColumnType("smallint");

                    b.Property<string>("ApplicationDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("CompanyApplyId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("ProposedBudget")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProposedDuration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("TenderAppllyId")
                        .HasColumnType("smallint");

                    b.HasKey("ApplicationId")
                        .HasName("PK__TenderAp__C93A4C99DF51B3A3");

                    b.HasIndex("CompanyApplyId");

                    b.HasIndex("TenderAppllyId");

                    b.ToTable("TenderApplication", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.TenderDetail", b =>
                {
                    b.Property<short>("TenderId")
                        .HasColumnType("smallint");

                    b.Property<short?>("AwardCompanyId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("AwardDate")
                        .HasColumnType("date");

                    b.Property<string>("AwardStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("BudgetEstimation")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly>("ClosingDate")
                        .HasColumnType("date");

                    b.Property<string>("IsVerified")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IssuedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("IssuedDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("OpeningDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectDuration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("PublishedByUserId")
                        .HasColumnType("smallint");

                    b.Property<string>("TenderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenderType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TenderId")
                        .HasName("PK__TenderDe__B21B4268B86E3C20");

                    b.HasIndex("AwardCompanyId");

                    b.HasIndex("PublishedByUserId");

                    b.ToTable("TenderDetails");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Term", b =>
                {
                    b.Property<short>("TermId")
                        .HasColumnType("smallint");

                    b.Property<short>("ContractId")
                        .HasColumnType("smallint")
                        .HasColumnName("ContractID");

                    b.Property<short>("CreatedBy")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TermDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TermId")
                        .HasName("PK__Terms__410A21A54F7406C3");

                    b.HasIndex("ContractId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("FYPBidNetra.Models.UserList", b =>
                {
                    b.Property<short>("UserId")
                        .HasColumnType("smallint");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("UserId")
                        .HasName("PK__UserList__1788CC4CC254FB20");

                    b.HasIndex(new[] { "EmailAddress" }, "UQ__UserList__49A14740ACE3FBDA")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.ToTable("UserList", (string)null);
                });

            modelBuilder.Entity("FYPBidNetra.Models.AuctionBid", b =>
                {
                    b.HasOne("FYPBidNetra.Models.AuctionDetail", "AuctionBidNavigation")
                        .WithMany("AuctionBids")
                        .HasForeignKey("AuctionBidId")
                        .IsRequired()
                        .HasConstraintName("FK__AuctionBi__Aucti__5CD6CB2B");

                    b.HasOne("FYPBidNetra.Models.UserList", "Bidder")
                        .WithMany("AuctionBids")
                        .HasForeignKey("BidderId")
                        .IsRequired()
                        .HasConstraintName("FK__AuctionBi__Bidde__5DCAEF64");

                    b.Navigation("AuctionBidNavigation");

                    b.Navigation("Bidder");
                });

            modelBuilder.Entity("FYPBidNetra.Models.AuctionDetail", b =>
                {
                    b.HasOne("FYPBidNetra.Models.UserList", "Buyer")
                        .WithMany("AuctionDetailBuyers")
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("FK__AuctionDe__Buyer__571DF1D5");

                    b.HasOne("FYPBidNetra.Models.UserList", "PublishedByUser")
                        .WithMany("AuctionDetailPublishedByUsers")
                        .HasForeignKey("PublishedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__AuctionDe__Publi__5812160E");

                    b.Navigation("Buyer");

                    b.Navigation("PublishedByUser");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Bank", b =>
                {
                    b.HasOne("FYPBidNetra.Models.UserList", "Userbank")
                        .WithMany("Banks")
                        .HasForeignKey("UserbankId")
                        .HasConstraintName("FK__Bank__UserbankId__46E78A0C");

                    b.Navigation("Userbank");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Bid", b =>
                {
                    b.HasOne("FYPBidNetra.Models.AuctionBid", "AucBid")
                        .WithMany("Bids")
                        .HasForeignKey("AucBidId")
                        .IsRequired()
                        .HasConstraintName("FK__Bid__AucBidId__619B8048");

                    b.Navigation("AucBid");
                });

            modelBuilder.Entity("FYPBidNetra.Models.BlogContent", b =>
                {
                    b.HasOne("FYPBidNetra.Models.UserList", "UploadUser")
                        .WithMany("BlogContents")
                        .HasForeignKey("UploadUserId")
                        .HasConstraintName("FK__BlogConte__Uploa__6477ECF3");

                    b.Navigation("UploadUser");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Chat", b =>
                {
                    b.HasOne("FYPBidNetra.Models.UserList", "Receiver")
                        .WithMany("ChatReceivers")
                        .HasForeignKey("ReceiverId")
                        .IsRequired()
                        .HasConstraintName("FK__Chat__ReceiverId__68487DD7");

                    b.HasOne("FYPBidNetra.Models.UserList", "Sender")
                        .WithMany("ChatSenders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__Chat__SenderId__6754599E");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Company", b =>
                {
                    b.HasOne("FYPBidNetra.Models.UserList", "Userbid")
                        .WithMany("Companies")
                        .HasForeignKey("UserbidId")
                        .HasConstraintName("FK__Company__Userbid__3F466844");

                    b.Navigation("Userbid");
                });

            modelBuilder.Entity("FYPBidNetra.Models.ContractDetail", b =>
                {
                    b.HasOne("FYPBidNetra.Models.UserList", "Buyer")
                        .WithMany("ContractDetailBuyers")
                        .HasForeignKey("BuyerId")
                        .IsRequired()
                        .HasConstraintName("FK__ContractD__Buyer__6FE99F9F");

                    b.HasOne("FYPBidNetra.Models.AuctionDetail", "ConAuction")
                        .WithMany("ContractDetails")
                        .HasForeignKey("ConAuctionId")
                        .HasConstraintName("FK__ContractD__ConAu__6E01572D");

                    b.HasOne("FYPBidNetra.Models.Company", "ConCompany")
                        .WithMany("ContractDetails")
                        .HasForeignKey("ConCompanyId")
                        .HasConstraintName("FK__ContractD__ConCo__6D0D32F4");

                    b.HasOne("FYPBidNetra.Models.TenderDetail", "ConTender")
                        .WithMany("ContractDetails")
                        .HasForeignKey("ConTenderId")
                        .HasConstraintName("FK__ContractD__ConTe__6C190EBB");

                    b.HasOne("FYPBidNetra.Models.UserList", "Seller")
                        .WithMany("ContractDetailSellers")
                        .HasForeignKey("SellerId")
                        .IsRequired()
                        .HasConstraintName("FK__ContractD__Selle__6EF57B66");

                    b.Navigation("Buyer");

                    b.Navigation("ConAuction");

                    b.Navigation("ConCompany");

                    b.Navigation("ConTender");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Payment", b =>
                {
                    b.HasOne("FYPBidNetra.Models.AuctionDetail", "PayAuction")
                        .WithMany("Payments")
                        .HasForeignKey("PayAuctionId")
                        .HasConstraintName("FK__Payment__PayAuct__7C4F7684");

                    b.HasOne("FYPBidNetra.Models.UserList", "PayByUserNavigation")
                        .WithMany("PaymentPayByUserNavigations")
                        .HasForeignKey("PayByUser")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__PayByUs__7E37BEF6");

                    b.HasOne("FYPBidNetra.Models.Company", "PayCompany")
                        .WithMany("Payments")
                        .HasForeignKey("PayCompanyId")
                        .HasConstraintName("FK__Payment__PayComp__7B5B524B");

                    b.HasOne("FYPBidNetra.Models.TenderDetail", "PayTender")
                        .WithMany("Payments")
                        .HasForeignKey("PayTenderId")
                        .HasConstraintName("FK__Payment__PayTend__7A672E12");

                    b.HasOne("FYPBidNetra.Models.UserList", "PayToUserNavigation")
                        .WithMany("PaymentPayToUserNavigations")
                        .HasForeignKey("PayToUser")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__PayToUs__7D439ABD");

                    b.Navigation("PayAuction");

                    b.Navigation("PayByUserNavigation");

                    b.Navigation("PayCompany");

                    b.Navigation("PayTender");

                    b.Navigation("PayToUserNavigation");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Rating", b =>
                {
                    b.HasOne("FYPBidNetra.Models.UserList", "RatingByNavigation")
                        .WithMany("Ratings")
                        .HasForeignKey("RatingBy")
                        .HasConstraintName("FK__Rating__RatingBy__4316F928");

                    b.HasOne("FYPBidNetra.Models.Company", "RatingForNavigation")
                        .WithMany("Ratings")
                        .HasForeignKey("RatingFor")
                        .HasConstraintName("FK__Rating__RatingFo__440B1D61");

                    b.Navigation("RatingByNavigation");

                    b.Navigation("RatingForNavigation");
                });

            modelBuilder.Entity("FYPBidNetra.Models.TenderApplication", b =>
                {
                    b.HasOne("FYPBidNetra.Models.Company", "CompanyApply")
                        .WithMany("TenderApplications")
                        .HasForeignKey("CompanyApplyId")
                        .IsRequired()
                        .HasConstraintName("FK__TenderApp__Compa__5165187F");

                    b.HasOne("FYPBidNetra.Models.TenderDetail", "TenderApplly")
                        .WithMany("TenderApplications")
                        .HasForeignKey("TenderAppllyId")
                        .IsRequired()
                        .HasConstraintName("FK__TenderApp__Tende__5070F446");

                    b.Navigation("CompanyApply");

                    b.Navigation("TenderApplly");
                });

            modelBuilder.Entity("FYPBidNetra.Models.TenderDetail", b =>
                {
                    b.HasOne("FYPBidNetra.Models.Company", "AwardCompany")
                        .WithMany("TenderDetails")
                        .HasForeignKey("AwardCompanyId")
                        .HasConstraintName("FK__TenderDet__Award__49C3F6B7");

                    b.HasOne("FYPBidNetra.Models.UserList", "PublishedByUser")
                        .WithMany("TenderDetails")
                        .HasForeignKey("PublishedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__TenderDet__Publi__4AB81AF0");

                    b.Navigation("AwardCompany");

                    b.Navigation("PublishedByUser");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Term", b =>
                {
                    b.HasOne("FYPBidNetra.Models.ContractDetail", "Contract")
                        .WithMany("Terms")
                        .HasForeignKey("ContractId")
                        .IsRequired()
                        .HasConstraintName("FK__Terms__ContractI__75A278F5");

                    b.HasOne("FYPBidNetra.Models.UserList", "CreatedByNavigation")
                        .WithMany("Terms")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__Terms__CreatedBy__778AC167");

                    b.Navigation("Contract");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("FYPBidNetra.Models.AuctionBid", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("FYPBidNetra.Models.AuctionDetail", b =>
                {
                    b.Navigation("AuctionBids");

                    b.Navigation("ContractDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("FYPBidNetra.Models.Company", b =>
                {
                    b.Navigation("ContractDetails");

                    b.Navigation("Payments");

                    b.Navigation("Ratings");

                    b.Navigation("TenderApplications");

                    b.Navigation("TenderDetails");
                });

            modelBuilder.Entity("FYPBidNetra.Models.ContractDetail", b =>
                {
                    b.Navigation("Terms");
                });

            modelBuilder.Entity("FYPBidNetra.Models.TenderDetail", b =>
                {
                    b.Navigation("ContractDetails");

                    b.Navigation("Payments");

                    b.Navigation("TenderApplications");
                });

            modelBuilder.Entity("FYPBidNetra.Models.UserList", b =>
                {
                    b.Navigation("AuctionBids");

                    b.Navigation("AuctionDetailBuyers");

                    b.Navigation("AuctionDetailPublishedByUsers");

                    b.Navigation("Banks");

                    b.Navigation("BlogContents");

                    b.Navigation("ChatReceivers");

                    b.Navigation("ChatSenders");

                    b.Navigation("Companies");

                    b.Navigation("ContractDetailBuyers");

                    b.Navigation("ContractDetailSellers");

                    b.Navigation("PaymentPayByUserNavigations");

                    b.Navigation("PaymentPayToUserNavigations");

                    b.Navigation("Ratings");

                    b.Navigation("TenderDetails");

                    b.Navigation("Terms");
                });
#pragma warning restore 612, 618
        }
    }
}
